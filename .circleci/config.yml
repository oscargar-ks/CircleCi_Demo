version: 2.1 
jobs:
  run-tests-sandbox:
    docker:
      - image: cimg/node:18.7.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: Install Dependencies
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: 
          name: Login to Org
          command: . build/login_to_sandbox.sh
      - run:
          name: Run Apex Tests
          command: . build/run_apex_tests_sandbox.sh
      - store_test_results:
          path: test-results
  code-review-sandbox:
    docker:
      - image: cimg/node:18.7.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: Install Dependencies
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: SFDX Scanner Analysis
          command: . build/run_sfdx_scanner.sh
      - store_artifacts:
          path: sfdxScannerAnalysis.csv
  deploy-code-sandbox:
    docker:
      - image: cimg/node:18.7.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: "Install Dependencies"
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: 
          name: Login to Org
          command: . build/login_to_sandbox.sh
      - run:
          name: Deploy to Org
          command: . build/deploy_code.sh
  run-tests-prod:
    docker:
      - image: cimg/node:18.7.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: Install Dependencies
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: 
          name: Login to Org
          command: . build/login_to_org.sh
      - run:
          name: Run Apex Tests
          command: . build/run_apex_tests.sh
      - store_test_results:
          path: test-results
  code-review-prod:
    docker:
      - image: cimg/node:18.7.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: Install Dependencies
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: SFDX Scanner Analysis
          command: . build/run_sfdx_scanner.sh
      - store_artifacts:
          path: sfdxScannerAnalysis.csv
  deploy-code-prod:
    docker:
      - image: cimg/node:18.7.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: "Install Dependencies"
          command: . build/install_dependencies.sh
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: 
          name: Login to Org
          command: . build/login_to_org.sh
      - run:
          name: Deploy to Org
          command: . build/validate_code.sh
workflows:
  version: 2
  validate:
    jobs:
      - run-tests-sandbox:
          filters:
            branches:
              only: 
                - uat
      - code-review-sandbox:
          requires:
            - run-tests-sandbox
      - deploy-code-sandbox:
          requires:
            - code-review-sandbox
      - run-tests-prod:
          requires:
            - deploy-code-sandbox
      - deploy-code-prod:
          requires:
            - run-tests-prod